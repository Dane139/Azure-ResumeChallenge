# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure Functions: https://aka.ms/python-webapps-actions

name: Build and deploy Python project to Azure Function App - GetVisitorCount

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # The path to your function app project subfolder
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'backend-function' 
  PYTHON_VERSION: '3.12' # Set this to the version your function app uses (3.12 is often default)

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # --- START CHANGE 1: Navigate to Subfolder for Build ---
      - name: Change directory to Function App project
        run: cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
        # NOTE: This step implicitly runs in the backend-function folder due to the 'cd' above

      - name: Install dependencies
        run: pip install -r requirements.txt
        # NOTE: This implicitly uses backend-function/requirements.txt
      # --- END CHANGE 1 ---

      # Optional: Add step to run tests here

      - name: Zip artifact for deployment
        # The zip command needs to run from the root of the project to package the correct folder structure
        run: zip -r release.zip ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/. -x *venv*
        
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip # Upload the zip file

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
        
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B54E04B63C734EE4903C6E1321E8525A }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_2ADB6B2531AD4F3592FD399536232343 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4DC82AA8ADE0454392E2EFB60A9AE2B0 }}

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        with:
          app-name: 'GetVisitorCount' # The name of your Function App
          package: release.zip # The name of the zip file
          # The deployment action is smart enough to find the code because we zipped the subfolder
